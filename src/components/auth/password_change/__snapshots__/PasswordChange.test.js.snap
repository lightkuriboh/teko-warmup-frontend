// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Password Change 2 should render correctly in "debug" mode 1`] = `
<PasswordChange>
  <div>
    <WithStyles(ForwardRef(Card))
      style={
        Object {
          "margin": "0 auto",
          "width": "35%",
        }
      }
    >
      <ForwardRef(Card)
        classes={
          Object {
            "root": "MuiCard-root",
          }
        }
        style={
          Object {
            "margin": "0 auto",
            "width": "35%",
          }
        }
      >
        <WithStyles(ForwardRef(Paper))
          className="MuiCard-root"
          elevation={1}
          style={
            Object {
              "margin": "0 auto",
              "width": "35%",
            }
          }
        >
          <ForwardRef(Paper)
            className="MuiCard-root"
            classes={
              Object {
                "elevation0": "MuiPaper-elevation0",
                "elevation1": "MuiPaper-elevation1",
                "elevation10": "MuiPaper-elevation10",
                "elevation11": "MuiPaper-elevation11",
                "elevation12": "MuiPaper-elevation12",
                "elevation13": "MuiPaper-elevation13",
                "elevation14": "MuiPaper-elevation14",
                "elevation15": "MuiPaper-elevation15",
                "elevation16": "MuiPaper-elevation16",
                "elevation17": "MuiPaper-elevation17",
                "elevation18": "MuiPaper-elevation18",
                "elevation19": "MuiPaper-elevation19",
                "elevation2": "MuiPaper-elevation2",
                "elevation20": "MuiPaper-elevation20",
                "elevation21": "MuiPaper-elevation21",
                "elevation22": "MuiPaper-elevation22",
                "elevation23": "MuiPaper-elevation23",
                "elevation24": "MuiPaper-elevation24",
                "elevation3": "MuiPaper-elevation3",
                "elevation4": "MuiPaper-elevation4",
                "elevation5": "MuiPaper-elevation5",
                "elevation6": "MuiPaper-elevation6",
                "elevation7": "MuiPaper-elevation7",
                "elevation8": "MuiPaper-elevation8",
                "elevation9": "MuiPaper-elevation9",
                "root": "MuiPaper-root",
                "rounded": "MuiPaper-rounded",
              }
            }
            elevation={1}
            style={
              Object {
                "margin": "0 auto",
                "width": "35%",
              }
            }
          >
            <div
              className="MuiPaper-root MuiPaper-elevation1 MuiCard-root MuiPaper-rounded"
              style={
                Object {
                  "margin": "0 auto",
                  "width": "35%",
                }
              }
            >
              <div
                style={
                  Object {
                    "margin": "10px",
                  }
                }
              >
                <p>
                  Change Password
                </p>
              </div>
              <hr
                style={
                  Object {
                    "color": "#e6e6ff",
                  }
                }
              />
              <div>
                <PasswordInput
                  errorText={null}
                  name="password"
                  onChange={[Function]}
                  placeHolder="password"
                >
                  <WithStyles(ForwardRef(TextField))
                    helperText={null}
                    id="standard-name"
                    label="password"
                    margin="normal"
                    name="password"
                    onChange={[Function]}
                    style={
                      Object {
                        "width": "85%",
                      }
                    }
                    type="password"
                  >
                    <ForwardRef(TextField)
                      classes={
                        Object {
                          "root": "MuiTextField-root",
                        }
                      }
                      helperText={null}
                      id="standard-name"
                      label="password"
                      margin="normal"
                      name="password"
                      onChange={[Function]}
                      style={
                        Object {
                          "width": "85%",
                        }
                      }
                      type="password"
                    >
                      <WithStyles(ForwardRef(FormControl))
                        className="MuiTextField-root"
                        margin="normal"
                        required={false}
                        style={
                          Object {
                            "width": "85%",
                          }
                        }
                        variant="standard"
                      >
                        <ForwardRef(FormControl)
                          className="MuiTextField-root"
                          classes={
                            Object {
                              "fullWidth": "MuiFormControl-fullWidth",
                              "marginDense": "MuiFormControl-marginDense",
                              "marginNormal": "MuiFormControl-marginNormal",
                              "root": "MuiFormControl-root",
                            }
                          }
                          margin="normal"
                          required={false}
                          style={
                            Object {
                              "width": "85%",
                            }
                          }
                          variant="standard"
                        >
                          <div
                            className="MuiFormControl-root MuiTextField-root MuiFormControl-marginNormal"
                            style={
                              Object {
                                "width": "85%",
                              }
                            }
                          >
                            <WithStyles(WithFormControlContext(ForwardRef(InputLabel)))
                              htmlFor="standard-name"
                            >
                              <WithFormControlContext(ForwardRef(InputLabel))
                                classes={
                                  Object {
                                    "animated": "MuiInputLabel-animated",
                                    "asterisk": "MuiInputLabel-asterisk",
                                    "disabled": "Mui-disabled",
                                    "error": "Mui-error",
                                    "filled": "MuiInputLabel-filled",
                                    "focused": "Mui-focused",
                                    "formControl": "MuiInputLabel-formControl",
                                    "marginDense": "MuiInputLabel-marginDense",
                                    "outlined": "MuiInputLabel-outlined",
                                    "required": "Mui-required",
                                    "root": "MuiInputLabel-root",
                                    "shrink": "MuiInputLabel-shrink",
                                  }
                                }
                                htmlFor="standard-name"
                              >
                                <ForwardRef(InputLabel)
                                  classes={
                                    Object {
                                      "animated": "MuiInputLabel-animated",
                                      "asterisk": "MuiInputLabel-asterisk",
                                      "disabled": "Mui-disabled",
                                      "error": "Mui-error",
                                      "filled": "MuiInputLabel-filled",
                                      "focused": "Mui-focused",
                                      "formControl": "MuiInputLabel-formControl",
                                      "marginDense": "MuiInputLabel-marginDense",
                                      "outlined": "MuiInputLabel-outlined",
                                      "required": "Mui-required",
                                      "root": "MuiInputLabel-root",
                                      "shrink": "MuiInputLabel-shrink",
                                    }
                                  }
                                  htmlFor="standard-name"
                                  muiFormControl={
                                    Object {
                                      "adornedStart": false,
                                      "disabled": false,
                                      "error": false,
                                      "filled": false,
                                      "focused": false,
                                      "margin": "normal",
                                      "onBlur": [Function],
                                      "onEmpty": [Function],
                                      "onFilled": [Function],
                                      "onFocus": [Function],
                                      "required": false,
                                      "variant": "standard",
                                    }
                                  }
                                >
                                  <WithStyles(WithFormControlContext(ForwardRef(FormLabel)))
                                    className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                                    classes={
                                      Object {
                                        "asterisk": "MuiInputLabel-asterisk",
                                        "disabled": "Mui-disabled",
                                        "error": "Mui-error",
                                        "focused": "Mui-focused",
                                        "required": "Mui-required",
                                      }
                                    }
                                    data-shrink={false}
                                    htmlFor="standard-name"
                                  >
                                    <WithFormControlContext(ForwardRef(FormLabel))
                                      className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                                      classes={
                                        Object {
                                          "asterisk": "MuiFormLabel-asterisk MuiInputLabel-asterisk",
                                          "disabled": "Mui-disabled Mui-disabled",
                                          "error": "Mui-error Mui-error",
                                          "filled": "MuiFormLabel-filled",
                                          "focused": "Mui-focused Mui-focused",
                                          "required": "Mui-required Mui-required",
                                          "root": "MuiFormLabel-root",
                                        }
                                      }
                                      data-shrink={false}
                                      htmlFor="standard-name"
                                    >
                                      <ForwardRef(FormLabel)
                                        className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                                        classes={
                                          Object {
                                            "asterisk": "MuiFormLabel-asterisk MuiInputLabel-asterisk",
                                            "disabled": "Mui-disabled Mui-disabled",
                                            "error": "Mui-error Mui-error",
                                            "filled": "MuiFormLabel-filled",
                                            "focused": "Mui-focused Mui-focused",
                                            "required": "Mui-required Mui-required",
                                            "root": "MuiFormLabel-root",
                                          }
                                        }
                                        data-shrink={false}
                                        htmlFor="standard-name"
                                        muiFormControl={
                                          Object {
                                            "adornedStart": false,
                                            "disabled": false,
                                            "error": false,
                                            "filled": false,
                                            "focused": false,
                                            "margin": "normal",
                                            "onBlur": [Function],
                                            "onEmpty": [Function],
                                            "onFilled": [Function],
                                            "onFocus": [Function],
                                            "required": false,
                                            "variant": "standard",
                                          }
                                        }
                                      >
                                        <label
                                          className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                                          data-shrink={false}
                                          htmlFor="standard-name"
                                        >
                                          password
                                        </label>
                                      </ForwardRef(FormLabel)>
                                    </WithFormControlContext(ForwardRef(FormLabel))>
                                  </WithStyles(WithFormControlContext(ForwardRef(FormLabel)))>
                                </ForwardRef(InputLabel)>
                              </WithFormControlContext(ForwardRef(InputLabel))>
                            </WithStyles(WithFormControlContext(ForwardRef(InputLabel)))>
                            <WithStyles(ForwardRef(Input))
                              id="standard-name"
                              name="password"
                              onChange={[Function]}
                              type="password"
                            >
                              <ForwardRef(Input)
                                classes={
                                  Object {
                                    "disabled": "Mui-disabled",
                                    "error": "Mui-error",
                                    "focused": "Mui-focused",
                                    "formControl": "MuiInput-formControl",
                                    "fullWidth": "MuiInput-fullWidth",
                                    "input": "MuiInput-input",
                                    "inputMarginDense": "MuiInput-inputMarginDense",
                                    "inputMultiline": "MuiInput-inputMultiline",
                                    "inputTypeSearch": "MuiInput-inputTypeSearch",
                                    "multiline": "MuiInput-multiline",
                                    "root": "MuiInput-root",
                                    "underline": "MuiInput-underline",
                                  }
                                }
                                id="standard-name"
                                name="password"
                                onChange={[Function]}
                                type="password"
                              >
                                <WithStyles(ForwardRef(InputBase))
                                  classes={
                                    Object {
                                      "disabled": "Mui-disabled",
                                      "error": "Mui-error",
                                      "focused": "Mui-focused",
                                      "formControl": "MuiInput-formControl",
                                      "fullWidth": "MuiInput-fullWidth",
                                      "input": "MuiInput-input",
                                      "inputMarginDense": "MuiInput-inputMarginDense",
                                      "inputMultiline": "MuiInput-inputMultiline",
                                      "inputTypeSearch": "MuiInput-inputTypeSearch",
                                      "multiline": "MuiInput-multiline",
                                      "root": "MuiInput-root MuiInput-underline",
                                      "underline": null,
                                    }
                                  }
                                  fullWidth={false}
                                  id="standard-name"
                                  inputComponent="input"
                                  multiline={false}
                                  name="password"
                                  onChange={[Function]}
                                  type="password"
                                >
                                  <ForwardRef(InputBase)
                                    classes={
                                      Object {
                                        "adornedEnd": "MuiInputBase-adornedEnd",
                                        "adornedStart": "MuiInputBase-adornedStart",
                                        "disabled": "Mui-disabled Mui-disabled",
                                        "error": "Mui-error Mui-error",
                                        "focused": "Mui-focused Mui-focused",
                                        "formControl": "MuiInputBase-formControl MuiInput-formControl",
                                        "fullWidth": "MuiInputBase-fullWidth MuiInput-fullWidth",
                                        "input": "MuiInputBase-input MuiInput-input",
                                        "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                                        "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                                        "inputMarginDense": "MuiInputBase-inputMarginDense MuiInput-inputMarginDense",
                                        "inputMultiline": "MuiInputBase-inputMultiline MuiInput-inputMultiline",
                                        "inputSelect": "MuiInputBase-inputSelect",
                                        "inputTypeSearch": "MuiInputBase-inputTypeSearch MuiInput-inputTypeSearch",
                                        "marginDense": "MuiInputBase-marginDense",
                                        "multiline": "MuiInputBase-multiline MuiInput-multiline",
                                        "root": "MuiInputBase-root MuiInput-root MuiInput-underline",
                                      }
                                    }
                                    fullWidth={false}
                                    id="standard-name"
                                    inputComponent="input"
                                    multiline={false}
                                    name="password"
                                    onChange={[Function]}
                                    type="password"
                                  >
                                    <div
                                      className="MuiInputBase-root MuiInput-root MuiInput-underline MuiInputBase-formControl MuiInput-formControl"
                                      onClick={[Function]}
                                    >
                                      <input
                                        aria-invalid={false}
                                        className="MuiInputBase-input MuiInput-input"
                                        disabled={false}
                                        id="standard-name"
                                        name="password"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onFocus={[Function]}
                                        required={false}
                                        type="password"
                                      />
                                    </div>
                                  </ForwardRef(InputBase)>
                                </WithStyles(ForwardRef(InputBase))>
                              </ForwardRef(Input)>
                            </WithStyles(ForwardRef(Input))>
                          </div>
                        </ForwardRef(FormControl)>
                      </WithStyles(ForwardRef(FormControl))>
                    </ForwardRef(TextField)>
                  </WithStyles(ForwardRef(TextField))>
                </PasswordInput>
                <PasswordInput
                  errorText={null}
                  name="newPassword"
                  onChange={[Function]}
                  placeHolder="newPassword"
                >
                  <WithStyles(ForwardRef(TextField))
                    helperText={null}
                    id="standard-name"
                    label="newPassword"
                    margin="normal"
                    name="newPassword"
                    onChange={[Function]}
                    style={
                      Object {
                        "width": "85%",
                      }
                    }
                    type="password"
                  >
                    <ForwardRef(TextField)
                      classes={
                        Object {
                          "root": "MuiTextField-root",
                        }
                      }
                      helperText={null}
                      id="standard-name"
                      label="newPassword"
                      margin="normal"
                      name="newPassword"
                      onChange={[Function]}
                      style={
                        Object {
                          "width": "85%",
                        }
                      }
                      type="password"
                    >
                      <WithStyles(ForwardRef(FormControl))
                        className="MuiTextField-root"
                        margin="normal"
                        required={false}
                        style={
                          Object {
                            "width": "85%",
                          }
                        }
                        variant="standard"
                      >
                        <ForwardRef(FormControl)
                          className="MuiTextField-root"
                          classes={
                            Object {
                              "fullWidth": "MuiFormControl-fullWidth",
                              "marginDense": "MuiFormControl-marginDense",
                              "marginNormal": "MuiFormControl-marginNormal",
                              "root": "MuiFormControl-root",
                            }
                          }
                          margin="normal"
                          required={false}
                          style={
                            Object {
                              "width": "85%",
                            }
                          }
                          variant="standard"
                        >
                          <div
                            className="MuiFormControl-root MuiTextField-root MuiFormControl-marginNormal"
                            style={
                              Object {
                                "width": "85%",
                              }
                            }
                          >
                            <WithStyles(WithFormControlContext(ForwardRef(InputLabel)))
                              htmlFor="standard-name"
                            >
                              <WithFormControlContext(ForwardRef(InputLabel))
                                classes={
                                  Object {
                                    "animated": "MuiInputLabel-animated",
                                    "asterisk": "MuiInputLabel-asterisk",
                                    "disabled": "Mui-disabled",
                                    "error": "Mui-error",
                                    "filled": "MuiInputLabel-filled",
                                    "focused": "Mui-focused",
                                    "formControl": "MuiInputLabel-formControl",
                                    "marginDense": "MuiInputLabel-marginDense",
                                    "outlined": "MuiInputLabel-outlined",
                                    "required": "Mui-required",
                                    "root": "MuiInputLabel-root",
                                    "shrink": "MuiInputLabel-shrink",
                                  }
                                }
                                htmlFor="standard-name"
                              >
                                <ForwardRef(InputLabel)
                                  classes={
                                    Object {
                                      "animated": "MuiInputLabel-animated",
                                      "asterisk": "MuiInputLabel-asterisk",
                                      "disabled": "Mui-disabled",
                                      "error": "Mui-error",
                                      "filled": "MuiInputLabel-filled",
                                      "focused": "Mui-focused",
                                      "formControl": "MuiInputLabel-formControl",
                                      "marginDense": "MuiInputLabel-marginDense",
                                      "outlined": "MuiInputLabel-outlined",
                                      "required": "Mui-required",
                                      "root": "MuiInputLabel-root",
                                      "shrink": "MuiInputLabel-shrink",
                                    }
                                  }
                                  htmlFor="standard-name"
                                  muiFormControl={
                                    Object {
                                      "adornedStart": false,
                                      "disabled": false,
                                      "error": false,
                                      "filled": false,
                                      "focused": false,
                                      "margin": "normal",
                                      "onBlur": [Function],
                                      "onEmpty": [Function],
                                      "onFilled": [Function],
                                      "onFocus": [Function],
                                      "required": false,
                                      "variant": "standard",
                                    }
                                  }
                                >
                                  <WithStyles(WithFormControlContext(ForwardRef(FormLabel)))
                                    className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                                    classes={
                                      Object {
                                        "asterisk": "MuiInputLabel-asterisk",
                                        "disabled": "Mui-disabled",
                                        "error": "Mui-error",
                                        "focused": "Mui-focused",
                                        "required": "Mui-required",
                                      }
                                    }
                                    data-shrink={false}
                                    htmlFor="standard-name"
                                  >
                                    <WithFormControlContext(ForwardRef(FormLabel))
                                      className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                                      classes={
                                        Object {
                                          "asterisk": "MuiFormLabel-asterisk MuiInputLabel-asterisk",
                                          "disabled": "Mui-disabled Mui-disabled",
                                          "error": "Mui-error Mui-error",
                                          "filled": "MuiFormLabel-filled",
                                          "focused": "Mui-focused Mui-focused",
                                          "required": "Mui-required Mui-required",
                                          "root": "MuiFormLabel-root",
                                        }
                                      }
                                      data-shrink={false}
                                      htmlFor="standard-name"
                                    >
                                      <ForwardRef(FormLabel)
                                        className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                                        classes={
                                          Object {
                                            "asterisk": "MuiFormLabel-asterisk MuiInputLabel-asterisk",
                                            "disabled": "Mui-disabled Mui-disabled",
                                            "error": "Mui-error Mui-error",
                                            "filled": "MuiFormLabel-filled",
                                            "focused": "Mui-focused Mui-focused",
                                            "required": "Mui-required Mui-required",
                                            "root": "MuiFormLabel-root",
                                          }
                                        }
                                        data-shrink={false}
                                        htmlFor="standard-name"
                                        muiFormControl={
                                          Object {
                                            "adornedStart": false,
                                            "disabled": false,
                                            "error": false,
                                            "filled": false,
                                            "focused": false,
                                            "margin": "normal",
                                            "onBlur": [Function],
                                            "onEmpty": [Function],
                                            "onFilled": [Function],
                                            "onFocus": [Function],
                                            "required": false,
                                            "variant": "standard",
                                          }
                                        }
                                      >
                                        <label
                                          className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                                          data-shrink={false}
                                          htmlFor="standard-name"
                                        >
                                          newPassword
                                        </label>
                                      </ForwardRef(FormLabel)>
                                    </WithFormControlContext(ForwardRef(FormLabel))>
                                  </WithStyles(WithFormControlContext(ForwardRef(FormLabel)))>
                                </ForwardRef(InputLabel)>
                              </WithFormControlContext(ForwardRef(InputLabel))>
                            </WithStyles(WithFormControlContext(ForwardRef(InputLabel)))>
                            <WithStyles(ForwardRef(Input))
                              id="standard-name"
                              name="newPassword"
                              onChange={[Function]}
                              type="password"
                            >
                              <ForwardRef(Input)
                                classes={
                                  Object {
                                    "disabled": "Mui-disabled",
                                    "error": "Mui-error",
                                    "focused": "Mui-focused",
                                    "formControl": "MuiInput-formControl",
                                    "fullWidth": "MuiInput-fullWidth",
                                    "input": "MuiInput-input",
                                    "inputMarginDense": "MuiInput-inputMarginDense",
                                    "inputMultiline": "MuiInput-inputMultiline",
                                    "inputTypeSearch": "MuiInput-inputTypeSearch",
                                    "multiline": "MuiInput-multiline",
                                    "root": "MuiInput-root",
                                    "underline": "MuiInput-underline",
                                  }
                                }
                                id="standard-name"
                                name="newPassword"
                                onChange={[Function]}
                                type="password"
                              >
                                <WithStyles(ForwardRef(InputBase))
                                  classes={
                                    Object {
                                      "disabled": "Mui-disabled",
                                      "error": "Mui-error",
                                      "focused": "Mui-focused",
                                      "formControl": "MuiInput-formControl",
                                      "fullWidth": "MuiInput-fullWidth",
                                      "input": "MuiInput-input",
                                      "inputMarginDense": "MuiInput-inputMarginDense",
                                      "inputMultiline": "MuiInput-inputMultiline",
                                      "inputTypeSearch": "MuiInput-inputTypeSearch",
                                      "multiline": "MuiInput-multiline",
                                      "root": "MuiInput-root MuiInput-underline",
                                      "underline": null,
                                    }
                                  }
                                  fullWidth={false}
                                  id="standard-name"
                                  inputComponent="input"
                                  multiline={false}
                                  name="newPassword"
                                  onChange={[Function]}
                                  type="password"
                                >
                                  <ForwardRef(InputBase)
                                    classes={
                                      Object {
                                        "adornedEnd": "MuiInputBase-adornedEnd",
                                        "adornedStart": "MuiInputBase-adornedStart",
                                        "disabled": "Mui-disabled Mui-disabled",
                                        "error": "Mui-error Mui-error",
                                        "focused": "Mui-focused Mui-focused",
                                        "formControl": "MuiInputBase-formControl MuiInput-formControl",
                                        "fullWidth": "MuiInputBase-fullWidth MuiInput-fullWidth",
                                        "input": "MuiInputBase-input MuiInput-input",
                                        "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                                        "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                                        "inputMarginDense": "MuiInputBase-inputMarginDense MuiInput-inputMarginDense",
                                        "inputMultiline": "MuiInputBase-inputMultiline MuiInput-inputMultiline",
                                        "inputSelect": "MuiInputBase-inputSelect",
                                        "inputTypeSearch": "MuiInputBase-inputTypeSearch MuiInput-inputTypeSearch",
                                        "marginDense": "MuiInputBase-marginDense",
                                        "multiline": "MuiInputBase-multiline MuiInput-multiline",
                                        "root": "MuiInputBase-root MuiInput-root MuiInput-underline",
                                      }
                                    }
                                    fullWidth={false}
                                    id="standard-name"
                                    inputComponent="input"
                                    multiline={false}
                                    name="newPassword"
                                    onChange={[Function]}
                                    type="password"
                                  >
                                    <div
                                      className="MuiInputBase-root MuiInput-root MuiInput-underline MuiInputBase-formControl MuiInput-formControl"
                                      onClick={[Function]}
                                    >
                                      <input
                                        aria-invalid={false}
                                        className="MuiInputBase-input MuiInput-input"
                                        disabled={false}
                                        id="standard-name"
                                        name="newPassword"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onFocus={[Function]}
                                        required={false}
                                        type="password"
                                      />
                                    </div>
                                  </ForwardRef(InputBase)>
                                </WithStyles(ForwardRef(InputBase))>
                              </ForwardRef(Input)>
                            </WithStyles(ForwardRef(Input))>
                          </div>
                        </ForwardRef(FormControl)>
                      </WithStyles(ForwardRef(FormControl))>
                    </ForwardRef(TextField)>
                  </WithStyles(ForwardRef(TextField))>
                </PasswordInput>
                <PasswordInput
                  errorText={null}
                  name="reNewPassword"
                  onChange={[Function]}
                  placeHolder="reNewPassword"
                >
                  <WithStyles(ForwardRef(TextField))
                    helperText={null}
                    id="standard-name"
                    label="reNewPassword"
                    margin="normal"
                    name="reNewPassword"
                    onChange={[Function]}
                    style={
                      Object {
                        "width": "85%",
                      }
                    }
                    type="password"
                  >
                    <ForwardRef(TextField)
                      classes={
                        Object {
                          "root": "MuiTextField-root",
                        }
                      }
                      helperText={null}
                      id="standard-name"
                      label="reNewPassword"
                      margin="normal"
                      name="reNewPassword"
                      onChange={[Function]}
                      style={
                        Object {
                          "width": "85%",
                        }
                      }
                      type="password"
                    >
                      <WithStyles(ForwardRef(FormControl))
                        className="MuiTextField-root"
                        margin="normal"
                        required={false}
                        style={
                          Object {
                            "width": "85%",
                          }
                        }
                        variant="standard"
                      >
                        <ForwardRef(FormControl)
                          className="MuiTextField-root"
                          classes={
                            Object {
                              "fullWidth": "MuiFormControl-fullWidth",
                              "marginDense": "MuiFormControl-marginDense",
                              "marginNormal": "MuiFormControl-marginNormal",
                              "root": "MuiFormControl-root",
                            }
                          }
                          margin="normal"
                          required={false}
                          style={
                            Object {
                              "width": "85%",
                            }
                          }
                          variant="standard"
                        >
                          <div
                            className="MuiFormControl-root MuiTextField-root MuiFormControl-marginNormal"
                            style={
                              Object {
                                "width": "85%",
                              }
                            }
                          >
                            <WithStyles(WithFormControlContext(ForwardRef(InputLabel)))
                              htmlFor="standard-name"
                            >
                              <WithFormControlContext(ForwardRef(InputLabel))
                                classes={
                                  Object {
                                    "animated": "MuiInputLabel-animated",
                                    "asterisk": "MuiInputLabel-asterisk",
                                    "disabled": "Mui-disabled",
                                    "error": "Mui-error",
                                    "filled": "MuiInputLabel-filled",
                                    "focused": "Mui-focused",
                                    "formControl": "MuiInputLabel-formControl",
                                    "marginDense": "MuiInputLabel-marginDense",
                                    "outlined": "MuiInputLabel-outlined",
                                    "required": "Mui-required",
                                    "root": "MuiInputLabel-root",
                                    "shrink": "MuiInputLabel-shrink",
                                  }
                                }
                                htmlFor="standard-name"
                              >
                                <ForwardRef(InputLabel)
                                  classes={
                                    Object {
                                      "animated": "MuiInputLabel-animated",
                                      "asterisk": "MuiInputLabel-asterisk",
                                      "disabled": "Mui-disabled",
                                      "error": "Mui-error",
                                      "filled": "MuiInputLabel-filled",
                                      "focused": "Mui-focused",
                                      "formControl": "MuiInputLabel-formControl",
                                      "marginDense": "MuiInputLabel-marginDense",
                                      "outlined": "MuiInputLabel-outlined",
                                      "required": "Mui-required",
                                      "root": "MuiInputLabel-root",
                                      "shrink": "MuiInputLabel-shrink",
                                    }
                                  }
                                  htmlFor="standard-name"
                                  muiFormControl={
                                    Object {
                                      "adornedStart": false,
                                      "disabled": false,
                                      "error": false,
                                      "filled": false,
                                      "focused": false,
                                      "margin": "normal",
                                      "onBlur": [Function],
                                      "onEmpty": [Function],
                                      "onFilled": [Function],
                                      "onFocus": [Function],
                                      "required": false,
                                      "variant": "standard",
                                    }
                                  }
                                >
                                  <WithStyles(WithFormControlContext(ForwardRef(FormLabel)))
                                    className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                                    classes={
                                      Object {
                                        "asterisk": "MuiInputLabel-asterisk",
                                        "disabled": "Mui-disabled",
                                        "error": "Mui-error",
                                        "focused": "Mui-focused",
                                        "required": "Mui-required",
                                      }
                                    }
                                    data-shrink={false}
                                    htmlFor="standard-name"
                                  >
                                    <WithFormControlContext(ForwardRef(FormLabel))
                                      className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                                      classes={
                                        Object {
                                          "asterisk": "MuiFormLabel-asterisk MuiInputLabel-asterisk",
                                          "disabled": "Mui-disabled Mui-disabled",
                                          "error": "Mui-error Mui-error",
                                          "filled": "MuiFormLabel-filled",
                                          "focused": "Mui-focused Mui-focused",
                                          "required": "Mui-required Mui-required",
                                          "root": "MuiFormLabel-root",
                                        }
                                      }
                                      data-shrink={false}
                                      htmlFor="standard-name"
                                    >
                                      <ForwardRef(FormLabel)
                                        className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                                        classes={
                                          Object {
                                            "asterisk": "MuiFormLabel-asterisk MuiInputLabel-asterisk",
                                            "disabled": "Mui-disabled Mui-disabled",
                                            "error": "Mui-error Mui-error",
                                            "filled": "MuiFormLabel-filled",
                                            "focused": "Mui-focused Mui-focused",
                                            "required": "Mui-required Mui-required",
                                            "root": "MuiFormLabel-root",
                                          }
                                        }
                                        data-shrink={false}
                                        htmlFor="standard-name"
                                        muiFormControl={
                                          Object {
                                            "adornedStart": false,
                                            "disabled": false,
                                            "error": false,
                                            "filled": false,
                                            "focused": false,
                                            "margin": "normal",
                                            "onBlur": [Function],
                                            "onEmpty": [Function],
                                            "onFilled": [Function],
                                            "onFocus": [Function],
                                            "required": false,
                                            "variant": "standard",
                                          }
                                        }
                                      >
                                        <label
                                          className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                                          data-shrink={false}
                                          htmlFor="standard-name"
                                        >
                                          reNewPassword
                                        </label>
                                      </ForwardRef(FormLabel)>
                                    </WithFormControlContext(ForwardRef(FormLabel))>
                                  </WithStyles(WithFormControlContext(ForwardRef(FormLabel)))>
                                </ForwardRef(InputLabel)>
                              </WithFormControlContext(ForwardRef(InputLabel))>
                            </WithStyles(WithFormControlContext(ForwardRef(InputLabel)))>
                            <WithStyles(ForwardRef(Input))
                              id="standard-name"
                              name="reNewPassword"
                              onChange={[Function]}
                              type="password"
                            >
                              <ForwardRef(Input)
                                classes={
                                  Object {
                                    "disabled": "Mui-disabled",
                                    "error": "Mui-error",
                                    "focused": "Mui-focused",
                                    "formControl": "MuiInput-formControl",
                                    "fullWidth": "MuiInput-fullWidth",
                                    "input": "MuiInput-input",
                                    "inputMarginDense": "MuiInput-inputMarginDense",
                                    "inputMultiline": "MuiInput-inputMultiline",
                                    "inputTypeSearch": "MuiInput-inputTypeSearch",
                                    "multiline": "MuiInput-multiline",
                                    "root": "MuiInput-root",
                                    "underline": "MuiInput-underline",
                                  }
                                }
                                id="standard-name"
                                name="reNewPassword"
                                onChange={[Function]}
                                type="password"
                              >
                                <WithStyles(ForwardRef(InputBase))
                                  classes={
                                    Object {
                                      "disabled": "Mui-disabled",
                                      "error": "Mui-error",
                                      "focused": "Mui-focused",
                                      "formControl": "MuiInput-formControl",
                                      "fullWidth": "MuiInput-fullWidth",
                                      "input": "MuiInput-input",
                                      "inputMarginDense": "MuiInput-inputMarginDense",
                                      "inputMultiline": "MuiInput-inputMultiline",
                                      "inputTypeSearch": "MuiInput-inputTypeSearch",
                                      "multiline": "MuiInput-multiline",
                                      "root": "MuiInput-root MuiInput-underline",
                                      "underline": null,
                                    }
                                  }
                                  fullWidth={false}
                                  id="standard-name"
                                  inputComponent="input"
                                  multiline={false}
                                  name="reNewPassword"
                                  onChange={[Function]}
                                  type="password"
                                >
                                  <ForwardRef(InputBase)
                                    classes={
                                      Object {
                                        "adornedEnd": "MuiInputBase-adornedEnd",
                                        "adornedStart": "MuiInputBase-adornedStart",
                                        "disabled": "Mui-disabled Mui-disabled",
                                        "error": "Mui-error Mui-error",
                                        "focused": "Mui-focused Mui-focused",
                                        "formControl": "MuiInputBase-formControl MuiInput-formControl",
                                        "fullWidth": "MuiInputBase-fullWidth MuiInput-fullWidth",
                                        "input": "MuiInputBase-input MuiInput-input",
                                        "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                                        "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                                        "inputMarginDense": "MuiInputBase-inputMarginDense MuiInput-inputMarginDense",
                                        "inputMultiline": "MuiInputBase-inputMultiline MuiInput-inputMultiline",
                                        "inputSelect": "MuiInputBase-inputSelect",
                                        "inputTypeSearch": "MuiInputBase-inputTypeSearch MuiInput-inputTypeSearch",
                                        "marginDense": "MuiInputBase-marginDense",
                                        "multiline": "MuiInputBase-multiline MuiInput-multiline",
                                        "root": "MuiInputBase-root MuiInput-root MuiInput-underline",
                                      }
                                    }
                                    fullWidth={false}
                                    id="standard-name"
                                    inputComponent="input"
                                    multiline={false}
                                    name="reNewPassword"
                                    onChange={[Function]}
                                    type="password"
                                  >
                                    <div
                                      className="MuiInputBase-root MuiInput-root MuiInput-underline MuiInputBase-formControl MuiInput-formControl"
                                      onClick={[Function]}
                                    >
                                      <input
                                        aria-invalid={false}
                                        className="MuiInputBase-input MuiInput-input"
                                        disabled={false}
                                        id="standard-name"
                                        name="reNewPassword"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onFocus={[Function]}
                                        required={false}
                                        type="password"
                                      />
                                    </div>
                                  </ForwardRef(InputBase)>
                                </WithStyles(ForwardRef(InputBase))>
                              </ForwardRef(Input)>
                            </WithStyles(ForwardRef(Input))>
                          </div>
                        </ForwardRef(FormControl)>
                      </WithStyles(ForwardRef(FormControl))>
                    </ForwardRef(TextField)>
                  </WithStyles(ForwardRef(TextField))>
                </PasswordInput>
              </div>
              <div
                style={
                  Object {
                    "margin": "10px",
                  }
                }
              >
                <WithStyles(ForwardRef(Fab))
                  aria-label="Add"
                  color="primary"
                  onClick={[Function]}
                  size="medium"
                  variant="extended"
                >
                  <ForwardRef(Fab)
                    aria-label="Add"
                    classes={
                      Object {
                        "colorInherit": "MuiFab-colorInherit",
                        "disabled": "Mui-disabled",
                        "extended": "MuiFab-extended",
                        "focusVisible": "Mui-focusVisible",
                        "label": "MuiFab-label",
                        "primary": "MuiFab-primary",
                        "root": "MuiFab-root",
                        "secondary": "MuiFab-secondary",
                        "sizeMedium": "MuiFab-sizeMedium",
                        "sizeSmall": "MuiFab-sizeSmall",
                      }
                    }
                    color="primary"
                    onClick={[Function]}
                    size="medium"
                    variant="extended"
                  >
                    <WithStyles(ForwardRef(ButtonBase))
                      aria-label="Add"
                      className="MuiFab-root MuiFab-extended MuiFab-primary MuiFab-sizeMedium"
                      component="button"
                      disabled={false}
                      focusRipple={true}
                      focusVisibleClassName="Mui-focusVisible"
                      onClick={[Function]}
                    >
                      <ForwardRef(ButtonBase)
                        aria-label="Add"
                        className="MuiFab-root MuiFab-extended MuiFab-primary MuiFab-sizeMedium"
                        classes={
                          Object {
                            "disabled": "Mui-disabled",
                            "focusVisible": "Mui-focusVisible",
                            "root": "MuiButtonBase-root",
                          }
                        }
                        component="button"
                        disabled={false}
                        focusRipple={true}
                        focusVisibleClassName="Mui-focusVisible"
                        onClick={[Function]}
                      >
                        <button
                          aria-label="Add"
                          className="MuiButtonBase-root MuiFab-root MuiFab-extended MuiFab-primary MuiFab-sizeMedium"
                          disabled={false}
                          onBlur={[Function]}
                          onClick={[Function]}
                          onDragLeave={[Function]}
                          onFocus={[Function]}
                          onKeyDown={[Function]}
                          onKeyUp={[Function]}
                          onMouseDown={[Function]}
                          onMouseLeave={[Function]}
                          onMouseUp={[Function]}
                          onTouchEnd={[Function]}
                          onTouchMove={[Function]}
                          onTouchStart={[Function]}
                          tabIndex={0}
                          type="button"
                        >
                          <span
                            className="MuiFab-label"
                          >
                            Submit
                          </span>
                          <NoSsr>
                            <WithStyles(TouchRipple)
                              center={false}
                            >
                              <TouchRipple
                                center={false}
                                classes={
                                  Object {
                                    "child": "MuiTouchRipple-child",
                                    "childLeaving": "MuiTouchRipple-childLeaving",
                                    "childPulsate": "MuiTouchRipple-childPulsate",
                                    "ripple": "MuiTouchRipple-ripple",
                                    "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                    "rippleVisible": "MuiTouchRipple-rippleVisible",
                                    "root": "MuiTouchRipple-root",
                                  }
                                }
                              >
                                <span
                                  className="MuiTouchRipple-root"
                                >
                                  <TransitionGroup
                                    childFactory={[Function]}
                                    component={null}
                                    enter={true}
                                    exit={true}
                                  />
                                </span>
                              </TouchRipple>
                            </WithStyles(TouchRipple)>
                          </NoSsr>
                        </button>
                      </ForwardRef(ButtonBase)>
                    </WithStyles(ForwardRef(ButtonBase))>
                  </ForwardRef(Fab)>
                </WithStyles(ForwardRef(Fab))>
                <button
                  name="fuck"
                  onClick={[Function]}
                >
                  submit
                </button>
              </div>
              <hr
                style={
                  Object {
                    "color": "#e6e6ff",
                  }
                }
              />
              <div>
                You have to login first!
              </div>
            </div>
          </ForwardRef(Paper)>
        </WithStyles(ForwardRef(Paper))>
      </ForwardRef(Card)>
    </WithStyles(ForwardRef(Card))>
  </div>
</PasswordChange>
`;
